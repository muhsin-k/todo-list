{
  "parser": "babel-eslint",
  "extends": ["airbnb", "prettier/react"],
  "plugins": ["prettier"],
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
    "jest": true
  },
  "rules": {
    // lint errors not going with prettier rules
    "prettier/prettier": "error",

    // REACT SPECIFIC
    // allow jsx syntax to live in js files
    "react/jsx-filename-extension": ["error", { "extensions": [".js"] }],
    "react/prefer-stateless-function": "off",
    // what's allowed in anchor links
    // https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md#rule-details
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        // which components acts on behalf <a ..>
        "components": ["Link"],
        // apart from "href" which attributes acts on its behalf
        "specialLink": ["to"],
        // validates if the anchor is being used as intended or else
        // will signal to use a button instead
        "aspects": ["noHref", "invalidHref", "preferButton"]
      }
    ],
    "react/forbid-prop-types": "warn",
    "react/no-unused-prop-types": "warn",

    // ES5/ES6 SPECIFIC
    "no-return-assign": "off", // handy for react ref assign
    "no-mixed-operators": "off",
    // allow functions to be defined anywhere in the file
    "no-use-before-define": "off",
    // arrow functions require parens around arguments in all cases
    "arrow-parens": ["error", "always"],
    // don't force braces in arrow function body
    "arrow-body-style": "off",
    // Trailing commas simplify adding and removing items to objects and arrays
    // when split in multiple lines (since only the lines you are modifying must
    //  be touched.) Also it improves the clarity of diffs when an item is added
    //  or removed from an object or array.
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "never",
        "exports": "always-multiline",
        "functions": "ignore"
      }
    ],
    // Forbid the import of external modules that are not declared in
    // the package.json's dependencies. For modules in devDependencies,
    // only allow them in the below file patterns.
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.js",
          "**/*.spec.js",
          "**/*.dev.js",
          "**/*.stories.js"
        ]
      }
    ]
  }
}
